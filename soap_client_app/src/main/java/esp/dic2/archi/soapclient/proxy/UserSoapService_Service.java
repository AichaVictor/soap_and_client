
package esp.dic2.archi.soapclient.proxy;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "UserSoap_Service", targetNamespace = "http://finalproject.softarchitecture.dic2.esp/", wsdlLocation = "http://localhost:8081/?wsdl")
public class UserSoapService_Service
    extends Service
{

    private final static URL USERSOAPSERVICE_WSDL_LOCATION;
    private final static WebServiceException USERSOAPSERVICE_EXCEPTION;
    private final static QName USERSOAPSERVICE_QNAME = new QName("http://finalproject.softarchitecture.dic2.esp/", "UserSoap_Service");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8081/?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        USERSOAPSERVICE_WSDL_LOCATION = url;
        USERSOAPSERVICE_EXCEPTION = e;
    }

    public UserSoapService_Service() {
        super(__getWsdlLocation(), USERSOAPSERVICE_QNAME);
    }

    public UserSoapService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), USERSOAPSERVICE_QNAME, features);
    }

    public UserSoapService_Service(URL wsdlLocation) {
        super(wsdlLocation, USERSOAPSERVICE_QNAME);
    }

    public UserSoapService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, USERSOAPSERVICE_QNAME, features);
    }

    public UserSoapService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserSoapService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns UserSoapService
     */
    @WebEndpoint(name = "UserSoapServicePort")
    public UserSoapService getUserSoapServicePort() {
        return super.getPort(new QName("http://finalproject.softarchitecture.dic2.esp/", "UserSoapServicePort"), UserSoapService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserSoapService
     */
    @WebEndpoint(name = "UserSoapServicePort")
    public UserSoapService getUserSoapServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://finalproject.softarchitecture.dic2.esp/", "UserSoapServicePort"), UserSoapService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (USERSOAPSERVICE_EXCEPTION!= null) {
            throw USERSOAPSERVICE_EXCEPTION;
        }
        return USERSOAPSERVICE_WSDL_LOCATION;
    }

}
